#include <IRremote.h>

int RECV_PIN = 11;
int LED1 = 2;
int LED2 = 3;
int LED3 = 4;
int LED4 = 5;
int LED5 = 6;
int LED6 = 7;
long on1  = 0x00FD30CF;
long off1 = 0x00FD28D7;
long on2 = 0x00FDB04F;
long off2 = 0x00FDA857;
long on3 = 0x00FD708F;
long off3 = 0x00FD6897;
long on4 = 0x00FD08F7;
long off4 = 0x00FD18E7;
long on5 = 0x00FD8877;
long off5 = 0x00FD9867;
long on6 = 0x00FD48B7;
long off6 = 0x00FD58A7;
IRrecv irrecv(RECV_PIN);
decode_results results;

/*
void dump(decode_results *results){
  int count = results->rawlen;
  if (results->decode_type == UNKNOWN){
     Serial.println("Could not decode message");
  }else{
    if (results->decode_type == NEC){
       Serial.print("Decoded NEC: ");
    }else if (results->decode_type == SONY){
       Serial.print("Decoded SONY: ");
    }else if (results->decode_type == RC5){
       Serial.print("Decoded RC5: ");
    }else if (results->decode_type == RC6){
       Serial.print("Decoded RC6: ");
    }
     Serial.print(results->value, HEX);
     Serial.print(" (");
     Serial.print(results->bits, DEC);
     Serial.println(" bits)");
   }
     Serial.print("Raw (");
     Serial.print(count, DEC);
     Serial.print("): ");
   for (int i = 0; i < count; i++){
      if (i%2 == 1){
      	Serial.print(results->rawbuf[i]*USECPERTICK, DEC);
      }else{
      	Serial.print(-(int)results->rawbuf[i]*USECPERTICK, DEC);
      }
      Serial.print(" ");
    }
    Serial.println("");
}
*/

void setup()
{
  pinMode(RECV_PIN, INPUT);   
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  pinMode(LED4, OUTPUT);
  pinMode(LED5, OUTPUT);
  pinMode(LED6, OUTPUT);  
  Serial.begin(9600);
  irrecv.enableIRIn(); 
}

void loop()
{
  if (irrecv.decode(&results)){
    if (results.value == on1)
       digitalWrite(LED1, HIGH);
    if (results.value == off1 )
       digitalWrite(LED1, LOW); 
    if (results.value == on2 )
       digitalWrite(LED2, HIGH);
    if (results.value == off2 )
       digitalWrite(LED2, LOW); 
    if (results.value == on3 )
       digitalWrite(LED3, HIGH);
    if (results.value == off3 )
       digitalWrite(LED3, LOW);
    if (results.value == on4 )
       digitalWrite(LED4, HIGH);
    if (results.value == off4 )
       digitalWrite(LED4, LOW); 
    if (results.value == on5 )
       digitalWrite(LED5, HIGH);
    if (results.value == off5 )
       digitalWrite(LED5, LOW); 
    if (results.value == on6 )
       digitalWrite(LED6, HIGH);
    if (results.value == off6 )
       digitalWrite(LED6, LOW);           
    irrecv.resume(); 
  }
}